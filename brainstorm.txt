
+ 3d projection filter
+ for each axis:
	sort in descending order of that coordinate and iterate from max down:
		if next point <= in all other axes than the last point, remove it
		if they're equal in primary iteration axis, 
			compare all equal elements to the element before that equal range.
			when you have multiple goods in the prev round, see if it increases the stat from the minimum of them.
			Silver_Skree: The next point needs to have AN axis value that's better than the combined minimums of all the last good points

. Rings and Earrings are slot-flagged for only the left
	. minimum item id goes in left slot to avoid duplicates of just left-right swapped sets
	. if you only have one ring, since cur starts at {1,1,1...} it thinks they are equal.
		need to consider empty slot
. also weapons if dual wielding

/ handle restricted slots

. add some small value for any stat given?
	general item level?
+ whether more or less of a stat counts as good (delay -)
	dusk gear
	consider naked slot ?
	see purpose.want_negative={[STAT_NAME] = true}

+ filter out of gear list any stat you care about that's negative

. Add a member gear_list:resource(slot) and maybe other info (weapon damage?)
	(to avoid having inner functions in every purpose utility)

. filter duplicate gear from relevant_gear except rings, earrings, weapons
	e.g. stacks of arrows

. certain weapons can not be dual wielded / sub slot

--------------------------
Skree

● HOW DO I ACCESSED AUGMENT

● Filter gear for any piece of equipment that has no extra bonuses and worse stats than other gear in its slot

● Special case: Detect if gear has "set bonus" on it and scan for other pieces of the set. If the set can be assembled, forcibly include the set pieces.

● Currently, we're feeding a gear_list that has been filtered down to currently-equippable items into the permutator.
	Do we want to instead permute ALL gear with a subtractive blend of jobs as we go, and build a larger but more general-purpose cache on disk?

● ^ OR, iterate over the set of all purposes, and check whether each piece of gear (or each set?) gives ANY stats that are beneficial to a given purpose, and cache that it's relevant to that purpose